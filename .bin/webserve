#! /usr/bin/env python3

# adapted from John Carter, https://stackoverflow.com/a/39801780/5689220
# PUT support from 'mildred',
#   https://gist.github.com/mildred/67d22d7289ae8f16cae7

import argparse
import http.server
import os
import socketserver

parser = argparse.ArgumentParser(description="A simple HTTP server")
parser.add_argument('-p', '--port', type=int, default=8080,
                    help="Port to bind to")
parser.add_argument('--put', action='store_true', help="Allow HTTP PUTs")
parser.add_argument('path', nargs='?', default='.', help="Path to serve up")
args = parser.parse_args()

os.chdir(args.path)


class MyHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_PUT(self):
        path = self.translate_path(self.path)
        if path.endswith('/'):
            self.send_response(405, message="Method Not Allowed")
            self.end_headers()
            self.wfile.write("PUT not allowed on a directory\n".encode())
        else:
            try:
                os.makedirs(os.path.dirname(path))
            except FileExistsError:
                pass
            length = int(self.headers['Content-Length'])
            with open(path, 'wb') as f:
                f.write(self.rfile.read(length))
            self.send_response(201, message="Success")
            self.end_headers()


if(args.put):
    handler = MyHTTPRequestHandler
else:
    handler = http.server.SimpleHTTPRequestHandler
httpd = socketserver.TCPServer(("", args.port), handler)
print("serving at port", args.port)
try:
    httpd.serve_forever()
except KeyboardInterrupt:
    httpd.server_close()
    print()
